{"title": "Google just cracked one of the building blocks of web encryption (but don\u2019t worry)", "content": " \nToday, Google made major waves in the cryptography world, announcing a public collision in the SHA-1 algorithm. It\u2019s a deathblow to what was once one of the most popular algorithms in cryptography, and a crisis for anyone still using the function. The good news is, almost no one is still using SHA-1, so you don\u2019t need to rush out and install any patches. But today\u2019s announcement is still a major power play from Google, with real implications for web security overall.\nLike most cryptography, it can get a little complicated, so it\u2019s probably best to start from the very beginning...\nWhat just happened?\nGoogle publicly broke one of the major algorithms in web encryption, called SHA-1. The company\u2019s researchers showed that with enough computing power \u2014 roughly 110 years of computing from a single GPU for just one of the phases \u2014 you can produce a collision, effectively breaking the algorithm. We\u2019ve known this was possible for a while, but nobody has done it, in part because of the possible fallout.\nA deathblow to a once-popular algorithm\nIn accordance with its disclosure policy, Google is waiting 90 days to say exactly how they did it \u2014 but once the proof-of-concept is out, anyone with enough computing power will be able to produce a SHA-1 collision, rendering the algorithm both insecure and obsolete.\nIt\u2019s hard to say if Google\u2019s researchers are the first people to do this (<cough> NSA <cough>), but they\u2019re the first ones to talk about it, which has major implications for anyone still using SHA-1.\nWhat does SHA-1 actually do?\nSHA-1 is a hashing function, which produces a digital fingerprint from a given file. That lets you verify a file\u2019s integrity without exposing the entire file, simply by checking the hash. If the hash function is working properly, each file will produce a unique hash \u2014 so if the hashes match, the files themselves will also match. That\u2019s particularly important for login systems, which need to verify that a password is correct without exposing the password itself. \nWhat\u2019s a collision and why does it matter?\nA collision is what happens when a hashing function breaks, and two files produce the same hash. That could allow an attacker to smuggle in a malicious file because it shares its hash with a legitimate file. As proof-of-concept for today\u2019s announcement, Google published two PDF files that, run through SHA-1, produce the same hash.\nIn practical terms, a broken hash function could be used to break HTTPS, the encryption system that now protects more than half the web. You can learn more about that system from the podcast below (there\u2019s a whole pie-ribbon-curse metaphor; it\u2019s great), but the gist is that it guarantees that the content you see at Wikipedia.com is really coming from Wikipedia and hasn\u2019t been tampered with along the way. If that system breaks, it would be easy for criminals to insert malware into web traffic from a compromised ISP or other network provider.\n\n\nShould I be worried?\nUnless you make a habit of clicking through those scary red screens, you\u2019ll be fine. Cryptographers have been predicting a collision like this for years, making ever more specific predictions about how you\u2019d produce one and how much computing power it would take. This is the first time anyone\u2019s burned the server time to actually do it, but we\u2019ve known something like this was possible for a while.\nAs a result, most sites have already dropped SHA-1. As recently as 2014 it was being used for as much as 90 percent of the encryption on the web, but it\u2019s been mostly abandoned in the years since. As of January 1st, every major browser will show you a big red warning when you visit a site secured by SHA-1. It\u2019s hard to say how many of those sites are left, but anyone with a halfway decent certificate provider is already safe.\nSHA-1 is still used in a couple places outside web encryption \u2014 particularly Git repositories \u2014 but given how long the algorithm has been deprecated, the broader impact shouldn\u2019t be that widespread.\nWhy did Google do this?\nThe short version is, they wanted to win the argument. Dropping SHA-1 took a lot of time and effort across the industry, and not everyone was eager to do it. The result has been a running fight over how fast make the switch \u2014 with Google\u2019s Chrome Security Team providing one of the loudest voices for a faster transition. Chrome was forcing websites away from SHA-1 as early as 2014, long before other browsers started cracking down. Firefox caught on fairly quickly, too, with Microsoft\u2019s Edge and IE bringing up the rear.\nThis is a fight about how secure the web needs to be\nChrome\u2019s early moves caused a lot of grief among certificate providers \u2014 but now that there\u2019s a proof-of-concept collision out there, the Chrome Security Team looks pretty smart. If we\u2019d listened to the slowpokes, this collision could have been a major problem! Instead, the industry moved fast, everyone\u2019s safe, and we have to write blog posts to explain why it matters at all.\nIn a broader sense, this is a fight about how secure the web needs to be. If you\u2019re making smartphones or selling apps, you might not think it\u2019s worth it to force the entire web off of a shaky algorithm. What does it matter if a few janky websites are slow to make the switch? But Google still a web advertising company, and that means any breakdown in web security is an existential threat. Whenever an algorithm like SHA-1 breaks, ad networks are among the first to be targeted, so Google\u2019s heavily invested in making sure those encryption systems work. And since Google\u2019s ads are served across the entire web, they need to make sure everyone\u2019s on board. Sometimes that means cracking a few heads!\nSo while it might seem like a mathematical curiosity, this is really a victory lap for Google \u2014 and one that cost quite a bit of server time. People have been saying SHA-1 was shaky for years, and now we all know they were right. Luckily, we all listened to the crypto folks, and nothing too serious got broken. You\u2019re welcome.\n"}
